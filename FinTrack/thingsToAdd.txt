Do something about title of the page still showing,
maybe add total button next to last month and last week
take toast code from tangy blazor
think about page for liablities and assets
otp system to login via email or phone
Try to fix (back navigation arrow not working properly) (Try to solve it using navigation stack);
Remember to correct the logic of Budgets start time end time and period in budget repository and api controller to check if the request is valid or not, also correct the model of budget to have key and foreign key for spentAmount.
Disable buttons to add start time and start month if the period is not one time.
Add default value "All" to Category in Dbinitializer
Manage new properties in BudgetDTO which are not in Budget model, in BudgetRepository and BudgetController after making UI for the Budget page.Same for goals.
Make Income and Expense page first then check Budget and goals are working properly or not.
Change OneTime to ""Custom""
Everytime you do get request on goals and budgets, you need to compute the properties in their DTOs.
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Things to Remember:-
add account id to everything, 
add migration every time model is changed,
SQL Query : Select * from FinTrackDB.dbo.Budgets;

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Ideas that I can Implement :-

Register a household so that you can see, the expense of your family members,
Create an evnolope of budget items with a particular constraint budget,
Create syncfusion calculator to calculate,
Give options to add Label tags, description, Payee name, Date time, payment type, status, Place of payment, reciept or attachments(give option to take photos of recipt from camera if possible),

Categories and or subcategories take from timely bills or wallet app,
Recent records overview, 
Chart for wallet balance trend with percentage, 
chart for just the expense structure,
option to add upcoming planned payments, with its separate timeline,
option to add more cards to track different things (MAYBE give a separate scrollview page for the same named "Charts"),
option ot add recurring debts like Loan interests, Leasing, Mortgage,
Give notification when predicted expense for a month is greater than the budget set,
maybe add storage for deleted and completed goals,
search funtionality searchs the records corressponding to the particular category in last month (add SearchResults Page) 
--------------------------------------------------------------------
Model variables:-

3 types of payments :- income, expense transfer.
status :- Cleared, UnCleared, Reconciled (last priority)
Currency, Accounts, 

Goals:- name of thing you are saving for, category, target amount , saved already, desired date(allow nullable), note for motivating yourself, status (goal reached or not or paused, (settable)), last added week amount , estimated time to reach the goal, percentage already saved amount, checkbox option to give notification when goal is not expected to hit or the date is comming closer to complete the goal etcetra, Goal color and or icons(maybe add this to represent in charts), date time when goal was added

Budgets:- name, period(week, month, year, onetime(specify start and end date)), date time when budget was added, category , amount to spend (dont allow 0), total spent amount in that category (also allow all categories together) ,
daily average spent , daily average recommended expense to not overspend, expected date when budget money will end, status (pending, Busted/exceeded(overspent but time period not over) , underspent, overspent (time period over));, checkbox option to give notification when Budget is expected to run out.

Transactions:- 


Settings:- set first day of the week, month , year; , Clear all data, export csv file of the records, see old records with the given interval, old budgets and goals that are completed, notes (write notes to yourself), maybe sometype of customizable display, select start screen, maybe some type of security pincode, 

Accounts:- Cash, Debit card , credit card etc.
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Significance of variables:-

if period = year, then it takes starting date as 1st jan of the year of when the budget or goal is created.

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

<SearchBar
                x:Name="searchBar"
                Placeholder="Hi user, click here to search..."
                SearchCommand="{Binding SearchCommand}"
                SearchCommandParameter="{Binding Source={x:Reference searchBar}, Path=Text}"
                VerticalOptions="Center" />

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++            
        <BlazorWebView x:Name="blazorWebView" HostPage="wwwroot/index.html">
    <BlazorWebView.RootComponents>
        <RootComponent Selector="#app" ComponentType="{x:Type components:Sidebar}" />
    </BlazorWebView.RootComponents>
</BlazorWebView>
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Goal:A specific amount of money you aim to save or acquire by a certain time.
Budget:A financial plan that outlines how you will allocate your income towards expenses and savings over a specific period (usually a month or year).
reconciliation refers to the process of verifying that your financial records match the records of another party, typically a bank or credit card company. 
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

private readonly ApplicationDbContext _db;
        private readonly IMapper _mapper;

        public BudgetRepository(ApplicationDbContext db, IMapper mapper)
        {
            _db = db;
            _mapper = mapper;
        }
 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++
        public async Task<BudgetDTO> Create(BudgetDTO objDTO)
{
    var obj = _mapper.Map<BudgetDTO, Budget>(objDTO);
    
    if (obj.Period == SD.Period_OneTime)
    {
        Debug.WriteLine(obj);
    }
    else if (obj.Period == SD.Period_Week)
    {
        obj.StartTime = DateTime.Now;
        obj.EndTime = DateTime.Now;
    }

    var addedObj = _db.Budgets.Add(obj);
    await _db.SaveChangesAsync();

    return _mapper.Map<Budget, BudgetDTO>(addedObj.Entity);
}

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

